apply plugin: 'java'
apply plugin: 'idea'

group = 'se.qxx.fiatlux'
version = rootProject.findProperty('version') ?: '1.0'

description = 'fiatlux-server'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {       
    maven { url "https://github.com/krussan/maven-repo/raw/master/" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

task archiveZip(type: Zip, dependsOn: 'build') {
	baseName = 'fiatlux-server'
	from "$libsDir"
	destinationDir = new File("$buildDir")
   include "**/*"
}

build {
	doLast {
		def runFile=new File("$libsDir/run.sh")
      runFile.withWriter('UTF-8') { writer ->
			writer.writeLine('#!/bin/sh')
			writer.writeLine('if [ -n "$LD_LIBRARY_PATH" ]')
			writer.writeLine('then')
			writer.writeLine('   LD_LIBRARY_PATH=$PWD:${LD_LIBRARY_PATH}')
			writer.writeLine('else')
			writer.writeLine('   LD_LIBRARY_PATH=$PWD')
			writer.writeLine('fi')
			writer.writeLine('export LD_LIBRARY_PATH=$LD_LIBRARY_PATH')
			writer.writeLine("java -jar $fatJar.archiveName" + ' ${1+"$@"} &')
		}

		copy {
			from "$projectDir"
			into "$libsDir"
			include 'stop.sh'
			include 'cron-example'
		}

		archiveZip
	}
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

jar {
  baseName 'fiatlux-server'

  manifest {
    attributes(
      'Main-Class': 'se.qxx.fiatlux.server.FiatLuxServer',
    )
  }
}

task fatJar(type: Jar) {
  manifest.from jar.manifest
  classifier = 'all'
  baseName 'fiatlux-server'

  from {
    configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
  } {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
  }
  with jar
}

artifacts {
    archives fatJar
}

dependencies {
    compile 'com.google.protobuf:protobuf-java:3.9.0'
    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'net.java.dev.jna:jna:4.2.2'
    compile 'com.luckycatlabs:SunriseSunsetCalculator:1.2'
    compile 'it.sauronsoftware.cron4j:cron4j:2.2.5'
    compile 'org.apache.logging.log4j:log4j-api:2.7'
    compile 'org.apache.logging.log4j:log4j-core:2.7'
    compile 'net.sourceforge.argparse4j:argparse4j:0.8.1'
    compile "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compile project(':se.qxx.fiatlux.domain')
    testCompile 'junit:junit:4.12'
}

